{"tagline":"An oscilloscope, using arduino and processing/node","body":"# Arduinoscope\r\n\r\nThis is the current version of my Arduino-powered, low-resolution, multi-channel oscilliscope. I made 2 frontends, that both speak [firmata](http://firmata.org), so you will need to install the Firmata firmware on your Arduino (in Arduino IDE: File -> Open -> Examples > Library-Firmata > StandardFirmata.)\r\n\r\nIt used to run over a simple serial protocol, but I have decided to standardize on Firmata, so I can keep the pin-reading code in the client, and make installation more standardized.\r\n\r\nThe basic idea with both front-ends is to connect your Arduino running Firmata, and start the front-end.\r\n\r\n## Standalone\r\n\r\nIf you don't care about developing the front-end, or don't want to install any dependencies, or do anything other than just have a working oscilliscope, choose the correct \"standalone\" zip file for your plaform from the [downloads](https://github.com/konsumer/arduinoscope/tree/master/processing/downloads) section.\r\n\r\n\r\n## Processing\r\n\r\nThis is a up-to-date port of my original oscilliscope. It is also the source for the stand-alone apps.\r\n\r\nIf you want to modify the processing front-end, see [instructions](https://github.com/konsumer/arduinoscope/tree/master/processing).\r\n\r\n\r\n## Node/web\r\n\r\nThis is my new and favorite GUI for the arduino.  You will need to install [node.js & npm](http://nodejs.org/download/) and follow the [instructions](https://github.com/konsumer/arduinoscope/tree/master/web) for that frontend.\r\n\r\nIf I can figure out a good way to make a stand-alone no install version of this, I will migrate the stand-alone apps to this front-end.\r\n","name":"Arduinoscope","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}